## ðŸ§­ STA 9750 â€“ Basic Software Tools for Data Anal.Fall 2025

**Instructor:** Prof. Michael Weylandt  
**Format:** Flipped-classroom + experiential learning using R, Quarto, and GitHub

STA 9750 introduces graduate students to data analytics in R through a project-driven format. Instead of traditional exams, students complete a sequence of GitHub-hosted mini-projects that mirror real-world analytical workflows. Each assignment develops technical fluency, analytical reasoning, and clear data storytelling skills.

---

### ðŸ“Š Mini-Projects (MP00 â€“ MP04)


- **MP00 â€“ Course Setup:** Git/GitHub + Quarto site  
- **MP01 â€“ Netflix Top 10 Analysis:** wrangling + visuals + press release â€” [Open MP01](mp01.qmd)  
- **MP02 â€“ Housing Affordability Index:** ACS + BLS + permits; indices & policy viz â€” [Open MP02](mp02.qmd)  
- **MP03 â€“ NYC Tree Canopy:** geospatial joins & maps â€” [Open MP03](mp03.qmd)
- **MP04 â€“ Capstone (TBD):** synthesize skills into a self-directed analysis â€” [Open MP04](mp04.qmd)

Each mini-project includes a GitHub-based peer review cycle focused on code clarity and rubric-based feedback.

---

### ðŸŽ¯ Learning Objectives
- End-to-end analytics in R/tidyverse  
- Reproducible Quarto reports (code + narrative + visuals)  
- Multi-source data integration (public/government/web)  
- Geospatial analysis and mapping  
- Data storytelling for technical & non-technical audiences  
- GitHub collaboration and professional peer feedback  
- Responsible AI use and academic integrity

---

### ðŸ“š Resources & Policies
- *R for Data Science* (Wickham & Grolemund), *Happy Git with R*, *Veridical Data Science*  
- Software: R, RStudio, Quarto (all free)  
- AI tools allowed only for small coding questions; full assignment generation is prohibited.

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 10
#| fig-height: 3.8

if (!require("ggplot2")) { install.packages("ggplot2", quiet=TRUE); library(ggplot2) }
if (!require("tibble"))  { install.packages("tibble",  quiet=TRUE); library(tibble) }

df <- tibble::tibble(
mp = factor(c("MP00","MP01","MP02","MP03","MP04"),
levels = rev(c("MP00","MP01","MP02","MP03","MP04"))),
progress = c(100, 100, 10, 0, 0)
)

ggplot(df, aes(x = progress, y = mp)) +
geom_segment(aes(x = 0, xend = progress, y = mp, yend = mp), linewidth = 6, alpha = 0.25) +
geom_point(size = 5) +
scale_x_continuous(limits = c(0, 100), labels = function(x) paste0(x, "%")) +
labs(title = "Mini-Projects Progress", x = "Completion", y = NULL) +
theme_minimal(base_size = 13) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(face="bold"))

```



